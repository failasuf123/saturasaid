generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id              Int      @id @default(autoincrement())
  clerkid         String?  @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  weddings  Wedding[]
}

model Wedding {
  id                String         @id 
  createdAt         DateTime    @default(now())
  watermark         Boolean     @default(false)
  theme             String

  nicknameMale      String
  nicknameFemale    String
  fullnameMale      String
  fullnameFemale    String
  dadMale           String
  momMale           String
  dadFemale         String
  momFemale         String

  mainEventTime     DateTime

  accountName1      String?
  accountBank1      String?
  accountNumber1    String?
  accountName2      String?
  accountBank2      String?
  accountNumber2    String?

  event1            String
  address1          String
  gmap1             String
  time1             DateTime
  event2            String?
  address2          String?
  gmap2             String?
  time2             DateTime?

  introductionType  Int
  greetingType      Int
  hookMiddleType    Int
  storyType         Int
  closingType       Int
  songType          Int

  invitations       Invitation[]
  images            Image[]
  userId            String
  user              User @relation(fields: [userId], references: [clerkid])
}

model Image {
  id         Int      @id @default(autoincrement())
  url        String
  type       String
  createdAt  DateTime    @default(now())
  weddingId  String
  wedding    Wedding  @relation(fields: [weddingId], references: [id], onDelete: Cascade)
}

model Invitation {
  inviteId   Int      @id @default(autoincrement())
  number     Int      @default(autoincrement())
  name       String
  url        String
  whatsapp   String
  email      String
  check      Boolean  @default(false)

  weddingId  String
  wedding    Wedding  @relation(fields: [weddingId], references: [id])
}
